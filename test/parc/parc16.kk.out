module parc/parc16
private import std/core/types = std/core/types = "";
private import std/core/hnd = std/core/hnd = "";
private import std/core = std/core = "";
public fun test : (xs : list<std/core/types/int>, y : std/core/types/int, z : std/core/types/int) -> std/core/types/int
 = fun(xs: list<std/core/types/int>, y: std/core/types/int, z: std/core/types/int){
 std/core/types/.drop(z);
 match (xs) {
 (std/core/Cons(((.skip std/core/types/.Box((x: std/core/types/int)) : std/core/types/.Box ) as .box-x28: std/core/types/.Box), (.pat0: list<
 std/core/types/int>)) : list<std/core/types/int> )
 -> val _ : std/core/types/int
 = std/core/types/.dup(x);
 val _ : ()
 = std/core/types/.drop(y);
 (match (xs) {
 (std/core/Cons(((.skip std/core/types/.Box((.pat2: std/core/types/int)) : std/core/types/.Box ) as .box-x29: std/core/types/.Box), (.pat3: list<
 std/core/types/int>)) : list<std/core/types/int> )
 -> std/core/types/.drop(xs);
 x;
 (.skip std/core/Nil() : (list<std/core/types/int>) )
 -> val _ : ()
 = std/core/types/.drop(x);
 val _ : ()
 = std/core/types/.drop(xs);
 2;
 });
 (std/core/Cons(((.skip std/core/types/.Box((.pat6: std/core/types/int)) : std/core/types/.Box ) as .box-x30: std/core/types/.Box), (.pat7: list<
 std/core/types/int>)) : list<std/core/types/int> )
 -> val _ : ()
 = std/core/types/.drop(xs);
 val _ : ()
 = std/core/types/.drop(y);
 2;
 (.skip std/core/Nil() : (list<std/core/types/int>) )
 -> std/core/types/.drop(xs);
 y;
 }
 };