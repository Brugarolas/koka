module parc/parc20
private import std/core/types = std/core/types = "";
private import std/core/hnd = std/core/hnd = "";
private import std/core = std/core = "";
// TRICKY: need to dup x because xs is consumed by Cons-ctor
public fun test : (xs : list<std/core/types/int>) -> list<std/core/types/int>
 = fun(xs: list<std/core/types/int>){
 match (xs) {
 (std/core/Cons(((x: std/core/types/int) as .unbox-x23: std/core/types/int), (.pat0: list<std/core/types/int>)) : list<std/core/types/int> )
 -> val _ : std/core/types/int
 = std/core/types/.dup(x);
 val .ru.22 : std/core/types/reuse
 = std/core/types/.reuse((std/core/types/.dup(xs)), (std/core/int32(2)));
 std/core/types/.alloc-at(.ru.22, (std/core/Cons((std/core/types/.box(x)), xs)));
 (.skip std/core/Nil() : (list<std/core/types/int>) )
 -> std/core/types/.drop(xs);
 std/core/Nil;
 }
 };