module parc/parc20
private import std/core/types = std/core/types = "";
private import std/core = std/core = "";
// TRICKY: need to dup x because xs is consumed by Cons-ctor
public fun test : (xs : list<int>) -> list<int>
 = fn(xs: list<int>){
 match (xs) {
 (std/core/Cons(((.skip std/core/types/.Box((x: int)) : .Box ) as .box: .Box), (.pat0: list<int>)) : list<int> )
 -> std/core/types/.dup(x);
 val .b : int
 = x;
 val .b : list<int>
 = xs;
 std/core/Cons((std/core/types/.box(.b)), .b);
 (.skip std/core/Nil() : (list<int>) )
 -> std/core/Nil;
 };
 };