[01;30minitial core check
[00;39;49m[00m[01;30mreturn core check
[00;39;49m[00m[01;30mlift functions core check
[00;39;49m[00m[01;30mopen resolve core check
[00;39;49m[00m[01;30mafter simplify core check 1
[00;39;49m[00m[01;30mmonadic core check
[00;39;49m[00m[01;30minlined functions core check
[00;39;49m[00m[01;30mafter simplify core check 2
[00;39;49m[00m[01;30mpublic fun test : (xs : list<std/core/types/int>, y : std/core/types/int, z : std/core/types/int) -> std/core/types/int
 = fun(xs: list<std/core/types/int>, y: std/core/types/int, z: std/core/types/int){
 match (xs) {
 (std/core/Cons((x: std/core/types/int), (.pat0: list<std/core/types/int>)) : list<std/core/types/int> )
 | std/core/(==.1)((std/core/types/.dup(x)), (std/core/types/.dup(z))) -> val _ : std/core/types/int
 = std/core/types/.dup(x);
 val _ : ()
 = std/core/types/.drop(xs);
 val _ : ()
 = std/core/types/.drop(y);
 val _ : ()
 = std/core/types/.drop(z);
 x;
 (std/core/Cons((x0: std/core/types/int), (.pat2: list<std/core/types/int>)) : list<std/core/types/int> )
 | std/core/(==.1)((std/core/types/.dup(x0)), (std/core/types/.dup(y))) -> val _ : ()
 = std/core/types/.drop(xs);
 val _ : ()
 = std/core/types/.drop(z);
 y;
 (std/core/Cons((.pat4: std/core/types/int), (.pat5: list<std/core/types/int>)) : list<std/core/types/int> )
 | std/core/(==.1)((std/core/types/.dup(y)), (std/core/types/.dup(z))) -> val _ : ()
 = std/core/types/.drop(xs);
 val _ : ()
 = std/core/types/.drop(y);
 val _ : ()
 = std/core/types/.drop(z);
 2;
 _
 -> val _ : ()
 = std/core/types/.drop(xs);
 val _ : ()
 = std/core/types/.drop(z);
 y;
 }
 };
[00;39;49m[00m[01;30mcl -nologo -c -W3 -Gm- -Zi -MDd -RTC1 -Fa"out/test/parc_parc3.asm" -I"cruntime/include" -Fo"out/test/parc_parc3.obj" "out/test/parc_parc3.c"
[00;39;49m[00mparc_parc3.c