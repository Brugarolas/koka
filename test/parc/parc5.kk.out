module parc/parc5
private import std/core/types = std/core/types = "";
private import std/core/hnd = std/core/hnd = "";
private import std/core = std/core = "";
public fun test : () -> std/core/types/int
 = fun(){
 val xs.32 : list<std/core/types/int>
 = std/core/Cons((std/core/types/.box(1)), std/core/Nil);
 match (xs.32) {
 (std/core/Cons(((.skip std/core/types/.Box((x: std/core/types/int)) : std/core/types/.Box ) as .box-x38: std/core/types/.Box), (.pat0: list<
 std/core/types/int>)) : list<std/core/types/int> )
 -> (match ((std/core/types/.is-unique(xs.32))) {
 (std/core/types/True() : std/core/types/bool )
 -> std/core/types/.drop(.pat0);
 std/core/types/.free(xs.32);
 _
 -> std/core/types/.dup(x);
 std/core/types/.dec-ref(xs.32);
 });
 x;
 (.skip std/core/Nil() : (list<std/core/types/int>) )
 -> 1;
 }
 };